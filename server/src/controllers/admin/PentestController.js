const express = require('express');
const { check, validationResult } = require('express-validator');
const router = express.Router();
const projectModel = require('../admin/../../database/schemas/project');
const pentestModel = require('../admin/../../database/schemas/pentest');
const findingModel = require('../admin/../../database/schemas/finding');
const assetModel = require('../admin/../../database/schemas/asset');
const AssetService = require('../admin/../../services/AssetService');
const PentestService = require('../admin/../../services/PentestService');
const FindingService = require('../admin/../../services/FindingService');

//For now the fields are the same as for project but this will change later
createPentest = async (req, res) => {
 
    //const { title,leadConsultant,scope,startDate,endDate,specialRequirements,executiveSummary } = req.body;
    const findings = req.body;
    const assets = req.body.assets;
    const projectName = Object.values(req.params);
    const project = await projectModel.findOne({'title': projectName})
    const projectId = project._id;
    let errArray = [];

    let alreadyExistingPentest = await pentestModel.findOne({title: project.title, projectIds: projectId});
        if (!alreadyExistingPentest){

            alreadyExistingPentest = PentestService.insertNewPentest(project, pentestModel);
        }else{
            pentestAlreadyExistsErr = {message: `Pentest ${alreadyExistingPentest.title} already exists for project ${project.title}!`};
            errArray.push(pentestAlreadyExistsErr)
        }
        
    
    
        let assetsArray = finding.assets;
        let alreadyExistingFinding = await findingModel.findOne({title: finding.title, pentestIds: alreadyExistingPentest._id});
        if (!alreadyExistingFinding){
            alreadyExistingFinding = FindingService.insertNewFinding(finding, findingModel, alreadyExistingPentest._id)
        }else{
            findingAlreadyExistsErr = {message: `Finding ${alreadyExistingFinding.title} already exists for pentest ${alreadyExistingPentest.title}!`};
            errArray.push(findingAlreadyExistsErr)
        }
    
        AssetService.assetSaveAndFindingUpdate(assetsArray,alreadyExistingFinding._id,projectId, assetModel, findingModel, projectModel);
    

    if (errArray.length > 0){
        res.json(errArray)
    }


};

getAllPentestsForCustomer = async (req, res) => {
 
    projectTitle = req.params
    const project = await projectModel.findOne({'title': projectTitle})
    const existinPentest = await pentestModel.find({'projectIds': project._id})
  
    res.json(existinPentest)
    
  
};


module.exports = { createPentest, getAllPentestsForCustomer };