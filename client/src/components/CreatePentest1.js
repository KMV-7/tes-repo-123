import { useState } from 'react';
import { useNavigate  } from 'react-router-dom';
import '../App.css';
import axios from 'axios';

const CreatePentest1 = () => {
    const [title, setTitle] = useState('');
    const [vulnDesc, setVulnDesc] = useState('');
    const [findingDesc, setfindingDesc] = useState('');
    const [impact, setImpact] = useState('');
    const [execProbability, setExecProbability] = useState('');
    const [severity, setSeverity] = useState('');
    const [category, setCategory] = useState('');
    const [screenshots, setScreenshots] = useState(['']);
    const [additionalComments, setAdditionalComments] = useState('');
    const [tags, setTags] = useState(['']);
    const [assets, setAssets] = useState(['']);
    const [projects, setProjects] = useState('');
    const [isPending, setIsPending] = useState(false);
    const history = useNavigate ();

    const handleSubmit = (e) => {
        e.preventDefault();
        const finding = { title, vulnDesc, findingDesc, impact, execProbability, severity, category, screenshots, additionalComments, tags, assets, projects };

        setIsPending(true);

        fetch('http://localhost:8000/admin/pentest17feb2022forbankofus/pentest/new', {
            method: 'POST',
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify(finding)
        }).then(() => {
            setIsPending(false);
            //history.push('/');
        })
    }

    const handleProjects = (e) => {
        e.preventDefault();
        const project = { projects };

        setIsPending(true);

        fetch('http://localhost:8000/api/admin/projects/bankofus/all', {
            method: 'GET',
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify(project.name)
        }).then(() => {
            setIsPending(false);
            history.push('/');
        })
    }

    return ( 
        <div className="CreatePentest">
        <div className="container">
          <div className="row">
            <div className="col-md-8 m-auto">
              <br />
            </div>
            <div className="col-md-8 m-auto">
              <h1 className="display-4 text-center">Add Pentest</h1>
              <p className="lead text-center">
                  Create new pentest
              </p>
            <form onSubmit={handleSubmit}>
                <label>Finding Title</label>
                <input 
                    type='text'
                    placeholder='Finding title'
                    name='title'
                    className='form-control'
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                />
                  <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Vulnerability Description'
                    name='vulnDescription'
                    className='form-control'
                    value={vulnDesc}
                    onChange={(e) => setVulnDesc(e.target.value)}
                  />
                </div>

                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Finding Description'
                    name='findingDescription'
                    className='form-control'
                    value={findingDesc}
                    onChange={(e) => setfindingDesc(e.target.value)}
                  />
                </div>

                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Impact of the finding'
                    name='impact'
                    className='form-control'
                    value={impact}
                    onChange={(e) => setImpact(e.target.value)}
                  />
                </div>

                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Execution Probability'
                    name='execProbability'
                    className='form-control'
                    value={execProbability}
                    onChange={(e) => setExecProbability(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Severity'
                    name='severity'
                    className='form-control'
                    value={severity}
                    onChange={(e) => setSeverity(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Category'
                    name='category'
                    className='form-control'
                    value={category}
                    onChange={(e) => setCategory(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Screenshots'
                    name='screenshots'
                    className='form-control'
                    value={screenshots}
                    onChange={(e) => setScreenshots(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='textarea'
                    placeholder='Aditional Comments'
                    name='additionalComments'
                    className='form-control'
                    value={additionalComments}
                    onChange={(e) => setAdditionalComments(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Tags'
                    name='tags'
                    className='form-control'
                    value={tags}
                    onChange={(e) => setTags(e.target.value)}
                  />
                </div>
                <div className='form-group'>
                  <input
                    type='text'
                    placeholder='Assets'
                    name='assets'
                    className='form-control'
                    value={assets}
                    onChange={(e) => setAssets(e.target.value)}
                  />
                </div>
                <label>Customer:</label>
                <div>
                    <select>
                        <option value="bankofus">bankofus</option>
                   
                    </select>
                </div>
                <label>Project:</label>
                <div>
                    <select>
                        <option value="pentest17feb2022forbankofus">pentest17feb2022forbankofus</option>
                   
                    </select>
                </div>
                <div>
                    {!isPending && <button>Add Pentest</button>}
                    {isPending && <button disabled>Adding Pentest</button>}
                </div>
            </form>
            
            </div>
          </div>
        </div>
      </div>
        
    );
};

export default CreatePentest1;
