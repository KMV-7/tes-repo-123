const express = require('express');
const router = express.Router();
const projectModel = require('../admin/../../database/schemas/project');
const pentestModel = require('../admin/../../database/schemas/pentest');
const findingModel = require('../admin/../../database/schemas/finding');
const assetModel = require('../admin/../../database/schemas/asset');
const {assetSaveAndFindingUpdate} = require('../admin/../../services/AssetService');


//add check
//add validationError
//For now the fields are the same as for project but this will change later
createPentest = async (req, res) => {
 
    //const { title,leadConsultant,scope,startDate,endDate,specialRequirements,executiveSummary } = req.body;
    const findings = req.body.findings;
    const assets = req.body.assets;
    const projectName = Object.values(req.params);
    const project = await projectModel.findOne({'title': projectName})
    const projectId = project._id;

    const newPentest = new pentestModel({
      title: project.title,
      leadConsultant: project.leadConsultant,
      scope: project.scope,
      startDate: project.startDate,
      endDate: project.endDate,
      specialRequirements: project.specialRequirements,
      executiveSummary: project.executiveSummary,
      projectIds: projectId,
    });

    for (const finding of findings) {
        let assetsArray = finding.assets;
        const newFinding = new findingModel({
            title: finding.title,
            vulnDescription: finding.vulnDescription,
            findingDescription: finding.findingDescription,
            imapct: finding.imapct,
            execProbability: finding.execProbability,
            severity: finding.severity,
            category: finding.category,
            screenshots: finding.screenshots, ///base64 encoded value or better s3 bucket link
            additionalComments: finding.additionalComments,
            tags: finding.tags,
            //mitigation: mitigation
        });

        const savedFinding = await newFinding.save();

        assetSaveAndFindingUpdate(assetsArray,savedFinding._id,projectId, assetModel, findingModel)    
    };

    savedPentest = await newPentest.save();
    res.send(savedPentest)


};


module.exports = { createPentest };